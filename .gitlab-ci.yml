##Стадии сборки
stages:
  - build
  - test
##Назначаем таг для контейнера(либо TAG, либо SHA)
before_script:
  - if [[ -z ${CI_COMMIT_TAG} ]]; then export TAG=${CI_COMMIT_SHA:0:8}; else export TAG=${CI_COMMIT_TAG}; fi
##Формируем название образа контейнера
variables:
  IMAGE_NAME: repo.it2.vm/case-core
##Сборка образа
1.build_image:
  stage: build
  tags:
    - shell
  script:
    - docker build -t $IMAGE_NAME:${TAG} .
##Публикация образа 
2.push_image:
  stage: build
  tags:
    - repo
  script:
    - docker push $IMAGE_NAME:${TAG}
  when: on_success
##При пуше в master или develop назначем метку latest
3.build_latest_image:
  stage: build
  tags: 
    - shell
  only:
    - master
    - develop
  script:
    - docker image tag $IMAGE_NAME:${TAG} $IMAGE_NAME:latest
  when: on_success
##Тестирование rubocop  
1.rubocop:
  stage: test
  variables:
    CC_LOG_LEVEL: debug
    CC_DB_NAME: case_core
    CC_DB_HOST: 192.168.1.1
    CC_DB_USER: rkis
    CC_DB_PASS: 123456
  image: 
    name: $IMAGE_NAME:latest
  only:
    - master
    - develop
  tags:
    - docker
  script:
    - bundle exec rubocop
##Тестирование rspec
1.rspec:
  stage: test
  variables:
    CC_LOG_LEVEL: unknown
    CC_DB_NAME: case_core
    CC_DB_HOST: 192.168.1.1
    CC_DB_USER: rkis
    CC_DB_PASS: 123456
  image: 
    name: $IMAGE_NAME:latest
  only:
    - master
    - develop
  tags:
    - docker
  script:
    - bundle exec rspec --fail-fast
